 /*-------------------------------------------------------------------*/
 /* WRITTEN BY: DAVID CHAMBERS                                        */
 /* PURPOSE   : MACRO TO SWAP VARIABLES AROUND AN EQUAL SIGN          */
 /* SCREEN_VAR = DATABASE_VAR BECOMES DATABASE_VAR = SCREEN_VAR       */
 /* VARIABLES MUST BE LOCATED IN POSITION 2 OR GREATER                */
 /* USAGE     :                                                       */
 /* ASSIGN MACRO TO A PFKEY, PUT CURSOR ON LINE THAT NEEDS SWAPPING,  */
 /* PRESS THE PFKEY, THE CHANGE IS MADE AND CURSOR DROPS TO NEXT LINE */
 /*-------------------------------------------------------------------*/
 ISREDIT MACRO

 /* DEBUGGING AID */
 /*CONTROL MSG LIST CONLIST SYMLIST

 /* GET CURRENT CURSOR LOCATION */
 ISREDIT (OL,OC) = CURSOR

 /* MOVE CURSOR TO COLUMN 1 OF SAME LINE */
 ISREDIT CURSOR = &OL 1

 /* SET LINE LABEL TO FOR SEARCHES */
 ISREDIT LABEL .ZCSR = .A

 /* FIND = SIGN */
 ISREDIT SEEK '=' .A .A
 IF &LASTCC GT 0 THEN EXIT CODE(0)
 ISREDIT (FL,FC) = CURSOR

 /* IF = NOT ON LINE CURSOR IS ON THEN EXIT */
 IF &OL Â¼= &FL THEN DO
   ISREDIT CURSOR = &OL &OC
   EXIT CODE(0)
 END

 /* FIND ; (PL/1 ONLY) */
 ISREDIT SEEK ';' .A .A
 IF &LASTCC = 0 THEN DO
   SET &PL1 = &STR(Y)
   ISREDIT (LL,LC) = CURSOR
 END
 ELSE DO
   SET &LL = &OL
   SET &LC = 72
 END

 /* REMOVE LINE LABEL */
 ISREDIT LABEL .ZCSR = &STR(' ')

 SET &PADBLANK = &STR(                                               )

 /* CAPTURE DATA FROM CURRENT LINE */
 ISREDIT (LINEDATA) = LINE &FL
 SET &TEXT1 = &STR(&SUBSTR(1:&FC-1,&LINEDATA))

 /* FIND BEGINING OF VARIABLE BEFORE = */
 SET &II = 1
 SET &LENSTR = &LENGTH(&STR(&TEXT1))
 DO WHILE (&II <= &LENSTR)
   IF &STR(&SUBSTR(&II:&II,&STR(&TEXT1))) NE &STR( ) THEN DO
     SET &T1S = &II
     SET &II = &LENSTR + 1
   END
   SET &II = &II + 1
 END

 /* FIND END OF VARIABLE BEFORE = */
 DO &II = &LENSTR TO 1 BY -1
   IF &STR(&SUBSTR(&II:&II,&STR(&TEXT1))) NE &STR( ) THEN DO
     SET &T1E = &II
     SET &II = 0
   END
 END

 /* SAVE VARIABLE ONE AND VARIABLE 2 */
 IF &T1S > 0 | &T1E > 0 THEN DO
     SET &TEXT1 = &STR(&SUBSTR(&T1S:&T1E,&STR(&TEXT1)))
     SET &TEXT2 = &STR(&SUBSTR(&FC+1:&LC-1,&LINEDATA))
   END
 ELSE -
   SET &TEXT2 = &STR(&SUBSTR(&FC+1:&LC-1,&LINEDATA))

 /* ADD ; TO END OF VARIABLE ONE */
 IF &PL1 = &STR(Y) THEN -
   SET &TEXT1 = &STR(&TEXT1)&STR(;)

 /* FIND BEGINNING OF VARIABLE AFTER = */
 SET &LENSTR = &LENGTH(&STR(&TEXT2))
 SET &II = 1
 DO WHILE (&II <= &LENSTR)
   IF &STR(&SUBSTR(&II:&II,&STR(&TEXT2))) NE &STR( ) THEN DO
     SET &T2S = &II
     SET &II = &LENSTR + 1
   END
   SET &II = &II + 1
 END

 /* FIND END OF VARIABLE AFTER = */
 DO &II = &LENSTR TO 1 BY -1
   IF &STR(&SUBSTR(&II:&II,&STR(&TEXT2))) NE &STR( ) THEN DO
     SET &T2E = &II
     SET &II = 0
   END
 END

 IF &T2S = 0 THEN SET &T2S = 1

 /* STRIP OFF LEADING AND TRAILING SPACES */
 SET &TEXT2 = &STR(&SUBSTR(&T2S:&T2E,&TEXT2))

 /* SET UP NEW LINE */
 IF &T1S > 0 THEN -
   SET &TEXT = &STR(&SUBSTR(1:&T1S-1,&PADBLANK)&TEXT2.&STR( = )&TEXT1)
 ELSE -
   SET &TEXT = &STR(&TEXT2.&STR( = )&TEXT1)

 /* OVERWRITE OLD LINE WITH NEW */
 ISREDIT LINE &FL = "&TEXT"

 /* MOVE CURSOR TO NEXT LINE */
 ISREDIT (LAST) = LINENUM .ZLAST
 SET &OL = &OL + 1
 IF &OL > &LAST THEN -
   SET &OL = &OL - 1
 ISREDIT CURSOR = &OL &OC

 ISREDIT RESET FIND

 EXIT CODE(0)
